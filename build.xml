<project basedir="./" default="build-debug-swf" name="GameOfLife"
         xmlns:rsel="antlib:org.apache.tools.ant.types.resources.selectors"
         xmlns:rcmp="antlib:org.apache.tools.ant.types.resources.comparators">
  <property name="build.properties.path" value="${basedir}/build.properties"/>
  <property file="${build.properties.path}"/>

  <taskdef resource="flexTasks.tasks" classpath="${flex.sdk.home}/ant/lib/flexTasks.jar" />

  <target name="clean">
    <delete dir="${output.path}"/>
  </target>

  <target name="build-release-zip" description="Build release deploy zipfile">
    <antcall target="clean"/>
    <antcall target="build-release-swf"/>
    <zip destfile="${flex.output.zip}"
         basedir="${flex.output.path}"
         excludes="*.cache" />
  </target>

  <target name="build-release-swf" description="Build release client swf">
    <antcall target="build-swf">
      <param name="debug" value="false"/>
    </antcall>
    <antcall target="copy-assets"/>
  </target>

  <target name="build-debug-swf" description="Build debug client swf">
    <antcall target="build-swf">
      <param name="debug" value="true"/>
    </antcall>
    <antcall target="copy-assets"/>
  </target>

  <target name="copy-assets">
    <!-- if you need to copy assets to the output path, uncomment this
    <copy preservelastmodified="true"
          todir="${flex.output.path}/assets"
          verbose="true">
      <fileset dir="${flex.assets}" />
    </copy>
    -->
  </target>

  <target name="generate-litl-sdk-libs">
    <restrict id="sdk-core-files">
      <fileset dir="${litl.sdk.core.path}/bin" includes="*-${litl.protocol.majorversion}.*.swc" />
      <rsel:compare when="ge" against="all">
        <control>
          <file file="${litl.sdk.core.path}/bin/*-${litl.protocol.majorversion}.${litl.protocol.minorversion}.swc" />
        </control>
        <rcmp:name />
      </rsel:compare>
    </restrict>
    <pathconvert property="litl-sdk-core-swcs" pathsep=" " refid="sdk-core-files">
      <globmapper from="${litl.sdk.core.path}/bin/*"
                  to="*"/>
    </pathconvert>
    <restrict id="sdk-controls-files">
      <fileset dir="${litl.sdk.controls.path}/bin" includes="*-${litl.protocol.majorversion}.*.swc" />
      <rsel:compare when="ge" against="all">
        <control>
          <file file="${litl.sdk.controls.path}/bin/*-${litl.protocol.majorversion}.${litl.protocol.minorversion}.swc" />
        </control>
        <rcmp:name />
      </rsel:compare>
    </restrict>
    <pathconvert property="litl-sdk-controls-swcs" pathsep=" " refid="sdk-controls-files">
      <globmapper from="${litl.sdk.controls.path}/bin/*"
                  to="*"/>
    </pathconvert>
  </target>

  <target name="build-swf" depends="generate-litl-sdk-libs">
    <mxmlc file="${flex.main}"
           output="${flex.output.swf}"
           keep-generated-actionscript="false"
           incremental="true"
           as3="true"
           optimize="true"
           fork="true"
           maxmemory="512m"
           debug="${debug}"
           locale="${locale}"
           strict="true"
           static-link-runtime-shared-libraries="true"
           default-frame-rate="${framesPerSecond}"
           >

      <!-- Get default compiler options. -->
      <load-config filename="${flex.sdk.home}/frameworks/flex-config.xml"/>

      <!-- List of path elements that form the roots of ActionScript class hierarchies. -->
      <compiler.source-path path-element="${flex.source}"/>
      <compiler.source-path path-element="${flex.sdk.home}/frameworks"/>

      <compiler.library-path dir="${flex.sdk.home}/frameworks" append="true">
        <include name="libs"/>
        <include name="locale/${locale}"/>
      </compiler.library-path>

      <compiler.library-path
         dir="${litl.sdk.core.path}/bin"
         includes="${litl-sdk-core-swcs}"
         append="true"/>

      <compiler.library-path
         dir="${litl.sdk.controls.path}/bin"
         includes="${litl-sdk-controls-swcs}"
         append="true"/>

      <!-- if you have custom libraries you need to include, uncomment this
      <compiler.library-path dir="${flex.libs}" append="true">
	<include name="*" />
      </compiler.library-path>
      -->

    </mxmlc>
  </target>

</project>
